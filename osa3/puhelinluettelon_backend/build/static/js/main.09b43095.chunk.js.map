{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/PersonsService.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","newFilter","onChange","value","Persons","personsToShow","handleDelete","map","person","key","name","number","onClick","PersonForm","newName","onNameChange","newNumber","onNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","errorMessage","className","App","useState","persons","setPersons","useEffect","PersonsService","setNewName","setNewNumber","setNewFilter","setNotification","setErrorMessage","filter","toLowerCase","includes","event","target","preventDefault","personObj","window","confirm","find","p","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09b43095.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({newFilter, onChange}) => {\r\n    return (\r\n        <div>filter to show with \r\n            <input value={newFilter} onChange={onChange}/>\r\n        </div>)\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({personsToShow, handleDelete}) => {\r\n    return (personsToShow.map(person => \r\n    <p key={person.name}>{person.name} {person.number} <button onClick={()=> handleDelete(person)}>delete</button></p>))\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({newName, onNameChange, newNumber, onNumberChange, onClick}) => {\r\n    return (\r\n    <form>\r\n        <div>\r\n          name: \r\n          <input \r\n            value={newName} onChange={onNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: \r\n          <input value={newNumber} onChange={onNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={onClick}>add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteNumber }","import React from 'react'\r\n\r\nconst Notification = ({ notification, errorMessage }) => {\r\n    if (notification !== null) {\r\n        return (\r\n            <div className=\"notification\">\r\n              {notification}\r\n            </div>\r\n          )\r\n    }\r\n    else if (errorMessage !== null) {\r\n        return (\r\n            <div className=\"error\">\r\n              {errorMessage}\r\n            </div>\r\n          )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './Filter'\r\nimport Persons from './Persons'\r\nimport PersonForm from './PersonForm'\r\nimport PersonsService from './PersonsService'\r\nimport Notification from './Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n  \r\n    useEffect(() => {\r\n      PersonsService.getAll().then(response => setPersons(response))\r\n    }, [])\r\n  \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ notification, setNotification] = useState(null)\r\n    const [ errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const handlePersonNameChange = (event) => setNewName(event.target.value)\r\n    const handlePersonNumberChange = (event) => setNewNumber(event.target.value)\r\n    const handlePersonFilterChange = (event) => setNewFilter(event.target.value)\r\n  \r\n    const addPerson = (event) => {\r\n      event.preventDefault()\r\n      const personObj = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n  \r\n      if (persons.map(person => person.name).includes(newName)) {\r\n        if (window.confirm(\r\n            `${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n          const person = persons.find(p => p.name === newName)\r\n          PersonsService.update(person.id, personObj).then(response => {\r\n            setPersons(persons.map(p => p.id !== person.id ? p : response))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotification(\r\n                `${person.name}'s number has been updated to ${personObj.number}`\r\n              )\r\n              setTimeout(() => {\r\n                setNotification(null)\r\n              }, 3000)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(\r\n              `Information of '${person.name}' has already been removed from server`\r\n            )\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 3000)\r\n        })\r\n      }\r\n    }\r\n    else {\r\n        PersonsService.create(personObj).then(response => {\r\n        setPersons(persons.concat(response))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setNotification(\r\n            `${personObj.name} was added to phonebook`\r\n            )\r\n            setTimeout(() => {\r\n            setNotification(null)\r\n            }, 3000)\r\n        })\r\n    }\r\n    }\r\n\r\n    const removePerson = (person) => {\r\n      if (window.confirm(`Delete ${person.name} ?`)) {\r\n        PersonsService.deleteNumber(person.id).then(\r\n          setPersons(persons.filter(p => p.id !== person.id)))\r\n        setNotification(\r\n            `${person.name} was deleted from phonebook`\r\n          )\r\n          setTimeout(() => {\r\n            setNotification(null)\r\n          }, 3000)\r\n      }\r\n    }\r\n    \r\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n    return (\r\n     <div>\r\n        <h2>Phonebook</h2>\r\n        <Notification notification={notification} errorMessage={errorMessage} />\r\n        <Filter newFilter={newFilter} onChange={handlePersonFilterChange}/>\r\n        <h3>Add a new</h3>\r\n        <PersonForm newName={newName} onNameChange={handlePersonNameChange}\r\n                    newNumber={newNumber} onNumberChange={handlePersonNumberChange}\r\n                    onClick={addPerson}/>\r\n        <h3>Numbers</h3>\r\n        <Persons personsToShow={personsToShow} handleDelete={removePerson}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}